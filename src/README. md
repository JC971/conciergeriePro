# ConciergePro 🏠

Application web moderne de gestion de conciergerie immobilière pour locations saisonnières et gardiennage de propriétés.

## 🚀 Démarrage Rapide

### Prérequis
- Node.js 18+
- MongoDB 5.0+
- npm ou yarn

### Installation

1. **Cloner le projet**
```bash
git clone <repository-url>
cd ConciergePro
```

2. **Backend**
```bash
cd backend
npm install
cp .env.example .env  # Configurer les variables d'environnement
npm run dev
```

3. **Frontend**
```bash
cd ../frontend
npm install
npm run dev
```

4. **Accès**
- Frontend: http://localhost:5173
- API: http://localhost:3001

## ✨ Fonctionnalités

- 📅 **Calendriers intégrés** pour locations saisonnières et gardiennage
- 📝 **Rapports d'intervention** détaillés avec upload d'images
- 🌍 **Multilingue** (Français/Anglais)
- 📱 **Responsive** - optimisé mobile, tablette, desktop
- 🔐 **Authentification sécurisée** avec JWT
- 🎨 **Interface moderne** sans frameworks CSS externes

## 🏗️ Architecture

- **Frontend**: React 18 + Vite + React Router + React Big Calendar
- **Backend**: Node.js + Express + MongoDB + Mongoose
- **Authentification**: JWT
- **Upload**: Multer
- **Sécurité**: Helmet + CORS

## 📁 Structure

```
ConciergePro/
├── frontend/           # Application React
│   ├── src/
│   │   ├── components/ # Composants réutilisables
│   │   ├── pages/      # Pages principales
│   │   ├── context/    # Contextes React
│   │   ├── utils/      # API et utilitaires
│   │   └── styles/     # CSS modulaires
│   └── package.json
├── backend/            # API Node.js
│   ├── models/         # Modèles MongoDB
│   ├── routes/         # Routes Express
│   ├── controllers/    # Logique métier
│   ├── middleware/     # Middleware personnalisés
│   └── server.js
└── README.md
```

## 🔧 Configuration

### Backend (.env)
```env
PORT=3001
NODE_ENV=development
JWT_SECRET=your_jwt_secret_key
MONGODB_URI=mongodb://localhost:27017/conciergepro
CORS_ORIGIN=http://localhost:5173
```

### Frontend (.env)
```env
VITE_API_URL=http://localhost:3001/api
```

## 📖 Documentation

- [Documentation complète](./DOCUMENTATION.md)
- [Rapport de tests](./RAPPORT_TESTS.md)

## 🚀 Déploiement

### Production
```bash
# Frontend
cd frontend && npm run build

# Backend
cd backend && npm start
```

### Avec PM2
```bash
pm2 start backend/server.js --name "conciergepro-api"
```

## 🧪 Tests

Tous les tests ont été validés avec succès :
- ✅ Navigation et interface utilisateur
- ✅ Formulaires et validation
- ✅ Intégration API frontend/backend
- ✅ Authentification JWT
- ✅ Upload d'images
- ✅ Responsivité mobile/desktop
- ✅ Internationalisation

## 🔐 Sécurité

- Authentification JWT
- Validation des données
- Protection CORS
- Middleware de sécurité Helmet
- Upload sécurisé avec validation de type

## 🌍 Internationalisation

Support complet français et anglais avec React i18next.

## 📱 Responsive Design

Interface optimisée pour :
- 📱 Mobile (320px+)
- 📱 Tablette (768px+)
- 💻 Desktop (1024px+)

## 🤝 Contribution

1. Fork le projet
2. Créer une branche feature (`git checkout -b feature/AmazingFeature`)
3. Commit les changements (`git commit -m 'Add AmazingFeature'`)
4. Push vers la branche (`git push origin feature/AmazingFeature`)
5. Ouvrir une Pull Request

## 📄 Licence

Ce projet est sous licence MIT. Voir le fichier `LICENSE` pour plus de détails.

## 👥 Équipe

Développé avec ❤️ pour la gestion moderne de conciergerie immobilière.

---

**ConciergePro v1.0** - Gestion professionnelle de conciergerie immobilière

